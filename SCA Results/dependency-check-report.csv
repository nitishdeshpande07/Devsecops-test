"Project","ScanDate","DependencyName","DependencyPath","Description","License","Md5","Sha1","Identifiers","CPE","CVE","CWE","Vulnerability","Source","CVSSv2_Severity","CVSSv2_Score","CVSSv2","CVSSv3_BaseSeverity","CVSSv3_BaseScore","CVSSv3","CPE Confidence","Evidence Count","VendorProject","Product","Name","DateAdded","ShortDescription","RequiredAction","DueDate","Notes"
NodeJS Project Dependency Check,"Fri, 25 Oct 2024 04:11:26 GMT",cookie:0.6.0,/src/package-lock.json?light-my-request:5.13.0/cookie:^0.6.0,HTTP server cookie parsing and serialization,MIT,"","",pkg:npm/cookie@0.6.0,"",CVE-2024-47764,CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),"cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",OSSINDEX,MEDIUM,6.900000095367432,CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:L/VA:N/SC:N/SI:N/SA:N,"","","",HIGHEST,6,"","","","","","","",""
NodeJS Project Dependency Check,"Fri, 25 Oct 2024 04:11:26 GMT",cookie:0.6.0,/src/package-lock.json?light-my-request:5.13.0/cookie:^0.6.0,HTTP server cookie parsing and serialization,MIT,"","",pkg:npm/cookie@0.6.0,"",GHSA-pxg6-pf52-xh8x,CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),"### Impact  The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(""userName=<script>alert('XSS3')</script>; Max-Age=2592000; a"", value)` would result in `""userName=<script>alert('XSS3')</script>; Max-Age=2592000; a=test""`, setting `userName` cookie to `<script>` and ignoring `value`.  A similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.  ### Patches  Upgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.  ### Workarounds  Avoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.  ### References  * https://github.com/jshttp/cookie/pull/167",NPM,"","","","","","",HIGHEST,6,"","","","","","","",""
NodeJS Project Dependency Check,"Fri, 25 Oct 2024 04:11:26 GMT",find-my-way:8.2.0,/src/package-lock.json?/find-my-way:8.2.0,Crazy fast http radix based router,MIT,"","",pkg:npm/find-my-way@8.2.0,cpe:2.3:a:find-my-way_project:find-my-way:8.2.0:*:*:*:*:*:*:*,CVE-2024-45813,CWE-1333 Inefficient Regular Expression Complexity,"find-my-way is a fast, open source HTTP router, internally using a Radix Tree (aka compact Prefix Tree), supports route params, wildcards, and it's framework independent. A bad regular expression is generated any time one has two parameters within a single segment, when adding a `-` at the end, like `/:a-:b-`. This may cause a denial of service in some instances. Users are advised to update to find-my-way v8.2.2 or v9.0.1. or subsequent versions. There are no known workarounds for this issue.  Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-45813 for details",OSSINDEX,HIGH,8.699999809265137,CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N,"","","",HIGHEST,8,"","","","","","","",""
NodeJS Project Dependency Check,"Fri, 25 Oct 2024 04:11:26 GMT",find-my-way:8.2.0,/src/package-lock.json?/find-my-way:8.2.0,Crazy fast http radix based router,MIT,"","",pkg:npm/find-my-way@8.2.0,cpe:2.3:a:find-my-way_project:find-my-way:8.2.0:*:*:*:*:*:*:*,GHSA-rrr8-f88r-h8q6,CWE-1333 Inefficient Regular Expression Complexity,"### Impact  A bad regular expression is generated any time you have two parameters within a single segment, when adding a `-` at the end, like `/:a-:b-`.  ### Patches  Update to find-my-way v8.2.2 or v9.0.1. or subsequent versions.  ### Workarounds  No known workarounds.  ### References  - [CVE-2024-45296](https://github.com/advisories/GHSA-9wv6-86v2-598j) - [Detailed blog post about `path-to-regexp` vulnerability](https://blakeembrey.com/posts/2024-09-web-redos/)",NPM,"","","",HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGHEST,8,"","","","","","","",""
NodeJS Project Dependency Check,"Fri, 25 Oct 2024 04:11:26 GMT",ini:1.3.5,/src/package-lock.json?/ini:1.3.5,An ini encoder/decoder for node,ISC,"","",pkg:npm/ini@1.3.5,cpe:2.3:a:ini_project:ini:1.3.5:*:*:*:*:*:*:*,CVE-2020-7788,CWE-1321 Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),"This affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.",NVD,HIGH,7.5,/AV:N/AC:L/Au:N/C:P/I:P/A:P,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGHEST,6,"","","","","","","",""
NodeJS Project Dependency Check,"Fri, 25 Oct 2024 04:11:26 GMT",ini:1.3.5,/src/package-lock.json?/ini:1.3.5,An ini encoder/decoder for node,ISC,"","",pkg:npm/ini@1.3.5,cpe:2.3:a:ini_project:ini:1.3.5:*:*:*:*:*:*:*,GHSA-qqgx-2p2h-9c37,CWE-1321 Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),"### Overview The `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.  If an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.  ### Patches  This has been patched in 1.3.6.  ### Steps to reproduce  payload.ini ``` [__proto__] polluted = ""polluted"" ```  poc.js: ``` var fs = require('fs') var ini = require('ini')  var parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8')) console.log(parsed) console.log(parsed.__proto__) console.log(polluted) ```  ``` > node poc.js {} { polluted: 'polluted' } { polluted: 'polluted' } polluted ```",NPM,"","","",HIGH,7.300000190734863,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,HIGHEST,6,"","","","","","","",""
